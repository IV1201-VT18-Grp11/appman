* Packaging and Deployment

  Appman shall be distributed as a Debian package for Ubuntu 17.10. The .deb
  package shall automatically set up the package and all dependencies.

** Installing

   To build the package, run:

   #+BEGIN_SRC bash
   $ sbt Debian/packageBin
   #+END_SRC

   It can then be installed by running:

   #+BEGIN_SRC bash
   $ sudo dpkg -i target/appman_*_all.deb
   #+END_SRC

   This package does not depend on the build system, and can be freely moved to
   a separate target computer.

** Access

   The system should now be accessible at [[http://localhost:9000/]]!

** Hardening

*** Passwords

    After installation the application secret and PostgreSQL password MUST
    be changed. To do this, first generate both passwords (perhaps using
    ~pwgen~):

    #+BEGIN_SRC bash
    $ pwgen 20 2
    #+END_SRC

    Then change the PostgreSQL password:

    #+BEGIN_SRC bash
    $ sudo -u appman psql -c '\password'
    #+END_SRC

    Then you need to tell appman about the new passwords by modifying
    ~PGPASSWORD~ and ~APPLICATION_SECRET~ in ~/etc/default/appman~.

    Finally, restart Appman to apply the new settings:

    #+BEGIN_SRC bash
    $ sudo systemctl restart appman.service
    #+END_SRC

*** TLS/HTTPS

    Appman SHOULD only be accessible using HTTPS. Setting this up is out of
    scope for this document, but can be done using a reverse proxy, such as
    NGINX or Apache HTTPD.

** Creating an Administrator account

   There is no administrator account created when Appman is installed. To
   promote a user, first create an account at [[http://localhost:9000/register]].
   Then run the following to set its role:

   #+BEGIN_SRC bash
   $ sudo -u appman psql -c "UPDATE users SET role='Admin' WHERE username='<YOUR_USERNAME>'"
   #+END_SRC

** Data migration

   Appman ships with a data migration tool called Datatruck, located in the
   ~datatruck~ directory. It is /not/ packaged with Appman, since it's only
   intended to be used at most once in a given installation.

   Since this was never clarified in the original document, it is assumed that
   the source data is stored in MySQL, the patron saint of shoddy legacy databases
   everywhere. Apologies if it was actually stored in SQLite, the patron saint of
   overgrown CGI scripts, or MSSQL or Oracle, the patron saints of pointy-haired
   bosses who should look into switching careers.

   To use it, you need [[https://www.python.org/][Python]] 3.6 (or newer) and [[https://docs.pipenv.org/][Pipenv]].

   Then, assuming you are running both the source and target
   databases on the same machine, run:

   #+BEGIN_SRC bash
   $ pipenv sync                                    # Install dependencies
   $ pipenv run datatruck --source-db=iv1201_sample # Import data iv1201_sample
   $ pipenv --rm                                    # Clean up dependencies
   #+END_SRC

   If you're running this from a different machine, or get authentication errors,
   run ~pipenv run datatruck --help~ for more options.

*** Notes

    - Datatruck assumes that the target database already exists and conforms to
      the Appman schema. The Debian package automatically sets this up.
      Otherwise, create the database, run ~sbt run~, and go to
      [[http://localhost:9000]].
    - Do *not* run Datatruck again if it has already succeeded, since it will
      try (and fail) to recreate the data that has already been migrated.
      However, nothing is written if the migration fails, so it is safe to retry
      if Datatruck has failed for some reason.
